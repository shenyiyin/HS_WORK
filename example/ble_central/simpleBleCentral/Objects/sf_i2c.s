; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --split_sections --debug -c -S -o.\objects\sf_i2c.s --depend=.\objects\sf_i2c.d --cpu=Cortex-M0 --apcs=interwork -O3 --diag_suppress=9931 -I..\..\..\components\inc -I..\..\..\components\arch\cm0 -I..\..\..\components\profiles\Roles -I..\..\..\components\profiles\DevInfo -I..\..\..\components\profiles\SimpleProfile -I..\..\..\components\driver\log -I..\..\..\components\driver\pwrmgr -I..\..\..\components\driver\uart -I..\..\..\components\driver\clock -I..\..\..\components\driver\gpio -I..\..\..\components\driver\flash -I..\..\..\components\driver\timer -I..\..\..\lib -I..\..\..\components\ble\include -I..\..\..\components\ble\controller -I..\..\..\components\ble\hci -I..\..\..\components\ble\host -I..\..\..\components\osal\include -I..\..\..\misc -I..\..\..\components\libraries\fs -I..\..\..\components\driver\pwm -I..\..\..\components\driver\i2c -I..\..\..\components\driver\dma -I.\RTE\_simpleBleCentral_Sample -IC:\Users\Dell\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\CMSIS\Core\Include -IC:\Users\Dell\AppData\Local\Arm\Packs\ARM\CMSIS\5.9.0\Device\ARM\ARMCM0\Include -D__MICROLIB -DADV_NCONN_CFG=0x01 -DADV_CONN_CFG=0x02 -DSCAN_CFG=0x04 -DINIT_CFG=0x08 -DBROADCASTER_CFG=0x01 -DOBSERVER_CFG=0x02 -DPERIPHERAL_CFG=0x04 -DCENTRAL_CFG=0x08 -DHOST_CONFIG=0xc -D__UVISION_VERSION=538 -D_RTE_ -DARMCM0 -D_RTE_ -DCFG_CP -DPHY_MCU_TYPE=MCU_BUMBEE_M0 -DMTU_SIZE=247 -DDEBUG_INFO=3 -DCFG_SLEEP_MODE=PWR_MODE_SLEEP -DMAX_NUM_LL_CONN=1 -DOSAL_CBTIMER_NUM_TASKS=1 -DUSE_FS=1 -DGATT_MAX_NUM_CONN=MAX_NUM_LL_CONN+1 --omf_browse=.\objects\sf_i2c.crf Source\sf_i2c.c]
        THUMB
        REQUIRE8
        PRESERVE8

        AREA ||i.i2c_delay||, CODE, READONLY, ALIGN=1

i2c_delay PROC
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        NOP      
        BX       lr
        ENDP


        AREA ||i.i2c_init||, CODE, READONLY, ALIGN=2

i2c_init PROC
        PUSH     {r4,lr}
        LDR      r4,|L1.68|
        ADR      r0,|L1.72|
        BL       dbg_printf
        MOVS     r1,#1
        MOVS     r0,#7
        BL       hal_gpio_pin_init
        MOVS     r1,#1
        MOVS     r0,#8
        BL       hal_gpio_pin_init
        MOVS     r1,#1
        MOVS     r0,#8
        BL       hal_gpio_pull_set
        MOVS     r1,#1
        MOVS     r0,#7
        BL       hal_gpio_pull_set
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        LDRB     r0,[r4,#0]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        ADR      r0,|L1.72|
        BL       dbg_printf
        POP      {r4,pc}
        ENDP

        DCW      0x0000
|L1.68|
        DCD      ||.data||
|L1.72|
        DCB      "i2c sfoft demo start...\n",0
        DCB      0
        DCB      0
        DCB      0

        AREA ||i.i2c_nack||, CODE, READONLY, ALIGN=1

i2c_nack PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDRB     r0,[r0,#0]
        MOVS     r1,#0
        BL       hal_gpio_fast_write
        LDRB     r0,[r4,#1]
        MOVS     r1,#0
        BL       hal_gpio_cfg_analog_io
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_pin_init
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        LDRB     r0,[r4,#1]
        MOVS     r1,#0
        BL       hal_gpio_fast_write
        MOV      r0,r4
        BL       i2c_delay
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        MOV      r0,r4
        BL       i2c_delay
        LDRB     r0,[r4,#0]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        MOV      r0,r4
        BL       i2c_delay
        LDRB     r0,[r4,#0]
        MOVS     r1,#0
        BL       hal_gpio_fast_write
        POP      {r4,pc}
        ENDP


        AREA ||i.i2c_obj_find||, CODE, READONLY, ALIGN=2

i2c_obj_find PROC
        PUSH     {r4-r6,lr}
        MOV      r5,r0
        LDR      r0,|L3.36|
        LDR      r4,[r0,#4]  ; head_handle
        B        |L3.24|
|L3.10|
        MOV      r1,r5
        LDR      r0,[r4,#0x20]
        BL       strcmp
        CMP      r0,#0
        BEQ      |L3.32|
        LDR      r4,[r4,#0x24]
|L3.24|
        CMP      r4,#0
        BNE      |L3.10|
        MOVS     r0,#0
        POP      {r4-r6,pc}
|L3.32|
        MOV      r0,r4
        POP      {r4-r6,pc}
        ENDP

|L3.36|
        DCD      ||.data||

        AREA ||i.i2c_read_byte||, CODE, READONLY, ALIGN=1

i2c_read_byte PROC
        PUSH     {r0,r1,r4-r7,lr}
        MOV      r4,r0
        MOVS     r5,#0
        SUB      sp,sp,#4
        LDRB     r0,[r0,#1]
        MOV      r1,r5
        BL       hal_gpio_pin_init
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_pull_set
        MOVS     r6,#0
        MOVS     r7,#1
|L4.28|
        LSLS     r0,r5,#25
        LSRS     r5,r0,#24
        LDRB     r0,[r4,#0]
        MOVS     r1,#0
        BL       hal_gpio_fast_write
        MOV      r0,r4
        BL       i2c_delay
        LDRB     r0,[r4,#0]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        LDRB     r0,[r4,#1]
        BL       hal_gpio_read
        CMP      r0,#0
        BEQ      |L4.66|
        ORRS     r5,r5,r7
|L4.66|
        MOV      r0,r4
        BL       i2c_delay
        ADDS     r6,r6,#1
        UXTB     r6,r6
        CMP      r6,#8
        BCC      |L4.28|
        LDR      r0,[sp,#8]
        CMP      r0,#0
        BEQ      |L4.156|
        LDRB     r0,[r4,#0]
        MOVS     r1,#0
        BL       hal_gpio_fast_write
        LDRB     r0,[r4,#1]
        MOVS     r1,#0
        BL       hal_gpio_cfg_analog_io
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_pin_init
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        LDRB     r0,[r4,#1]
        MOVS     r1,#0
        BL       hal_gpio_fast_write
        MOV      r0,r4
        BL       i2c_delay
        LDRB     r0,[r4,#0]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        MOV      r0,r4
        BL       i2c_delay
        LDRB     r0,[r4,#0]
        MOVS     r1,#0
        BL       hal_gpio_fast_write
        B        |L4.162|
|L4.156|
        MOV      r0,r4
        BL       i2c_nack
|L4.162|
        MOV      r0,r5
        POP      {r1-r7,pc}
        ENDP


        AREA ||i.i2c_read_multi_byte||, CODE, READONLY, ALIGN=1

i2c_read_multi_byte PROC
        PUSH     {r0-r7,lr}
        SUB      sp,sp,#4
        MOV      r7,r2
        MOV      r4,r1
        MOV      r6,r3
        LDR      r5,[sp,#0x28]
        LDR      r0,[sp,#4]
        BL       i2c_start
        LSRS     r1,r4,#1
        LSLS     r1,r1,#1
        LDR      r0,[sp,#4]
        BL       i2c_write_byte
        MOV      r1,r7
        LDR      r0,[sp,#4]
        BL       i2c_write_byte
        LDR      r0,[sp,#4]
        BL       i2c_start
        MOV      r1,r4
        MOVS     r0,#1
        ORRS     r1,r1,r0
        LDR      r0,[sp,#4]
        BL       i2c_write_byte
        MOVS     r4,#0
        SUBS     r7,r5,#1
        B        |L5.82|
|L5.60|
        CMP      r4,r7
        BEQ      |L5.68|
        MOVS     r1,#1
        B        |L5.70|
|L5.68|
        MOVS     r1,#0
|L5.70|
        LDR      r0,[sp,#4]
        BL       i2c_read_byte
        STRB     r0,[r6,r4]
        ADDS     r4,r4,#1
        UXTB     r4,r4
|L5.82|
        CMP      r4,r5
        BCC      |L5.60|
        LDR      r0,[sp,#4]
        BL       i2c_stop
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.i2c_read_multi_byte_16bit||, CODE, READONLY, ALIGN=1

i2c_read_multi_byte_16bit PROC
        PUSH     {r0-r7,lr}
        SUB      sp,sp,#4
        MOV      r7,r2
        MOV      r4,r1
        MOV      r6,r3
        LDR      r5,[sp,#0x28]
        LDR      r0,[sp,#4]
        BL       i2c_start
        LSRS     r1,r4,#1
        LSLS     r1,r1,#1
        LDR      r0,[sp,#4]
        BL       i2c_write_byte
        LSRS     r1,r7,#8
        LDR      r0,[sp,#4]
        BL       i2c_write_byte
        UXTB     r1,r7
        LDR      r0,[sp,#4]
        BL       i2c_write_byte
        LDR      r0,[sp,#4]
        BL       i2c_start
        MOVS     r0,#1
        ORRS     r4,r4,r0
        MOV      r1,r4
        LDR      r0,[sp,#4]
        BL       i2c_write_byte
        MOVS     r4,#0
        SUBS     r7,r5,#1
        B        |L6.90|
|L6.68|
        CMP      r4,r7
        BEQ      |L6.76|
        MOVS     r1,#1
        B        |L6.78|
|L6.76|
        MOVS     r1,#0
|L6.78|
        LDR      r0,[sp,#4]
        BL       i2c_read_byte
        STRB     r0,[r6,r4]
        ADDS     r4,r4,#1
        UXTB     r4,r4
|L6.90|
        CMP      r4,r5
        BCC      |L6.68|
        LDR      r0,[sp,#4]
        BL       i2c_stop
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.i2c_start||, CODE, READONLY, ALIGN=1

i2c_start PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDRB     r0,[r0,#0]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        MOV      r0,r4
        BL       i2c_delay
        LDRB     r0,[r4,#1]
        MOVS     r1,#0
        BL       hal_gpio_fast_write
        MOV      r0,r4
        BL       i2c_delay
        LDRB     r0,[r4,#0]
        MOVS     r1,#0
        BL       hal_gpio_fast_write
        POP      {r4,pc}
        ENDP


        AREA ||i.i2c_stop||, CODE, READONLY, ALIGN=1

i2c_stop PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDRB     r0,[r0,#0]
        MOVS     r1,#0
        BL       hal_gpio_fast_write
        LDRB     r0,[r4,#1]
        MOVS     r1,#0
        BL       hal_gpio_fast_write
        MOV      r0,r4
        BL       i2c_delay
        LDRB     r0,[r4,#0]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        MOV      r0,r4
        BL       i2c_delay
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        MOV      r0,r4
        BL       i2c_delay
        POP      {r4,pc}
        ENDP


        AREA ||i.i2c_wait_ack||, CODE, READONLY, ALIGN=1

i2c_wait_ack PROC
        PUSH     {r4-r6,lr}
        MOV      r4,r0
        MOVS     r5,#0xff
        LDRB     r0,[r0,#0]
        MOVS     r1,#0
        BL       hal_gpio_fast_write
        LDRB     r0,[r4,#1]
        MOVS     r1,#0
        BL       hal_gpio_pin_init
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_pull_set
        MOV      r0,r4
        BL       i2c_delay
        LDRB     r0,[r4,#0]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        B        |L9.56|
|L9.46|
        MOV      r0,r5
        SUBS     r5,r5,#1
        UXTH     r5,r5
        CMP      r0,#0
        BEQ      |L9.116|
|L9.56|
        LDRB     r0,[r4,#1]
        BL       hal_gpio_read
        CMP      r0,#0
        BNE      |L9.46|
        MOV      r0,r4
        BL       i2c_delay
        LDRB     r0,[r4,#0]
        MOVS     r1,#0
        BL       hal_gpio_fast_write
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        LDRB     r0,[r4,#1]
        MOVS     r1,#0
        BL       hal_gpio_cfg_analog_io
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_pin_init
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        MOVS     r0,#0
        POP      {r4-r6,pc}
|L9.116|
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        LDRB     r0,[r4,#1]
        MOVS     r1,#0
        BL       hal_gpio_cfg_analog_io
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_pin_init
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        MOV      r0,r4
        BL       i2c_stop
        MOVS     r0,#1
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.i2c_write_byte||, CODE, READONLY, ALIGN=1

i2c_write_byte PROC
        PUSH     {r4-r6,lr}
        MOV      r6,r1
        MOV      r5,r0
        MOVS     r4,#0
|L10.8|
        LDRB     r0,[r5,#0]
        MOVS     r1,#0
        BL       hal_gpio_fast_write
        MOV      r0,r5
        BL       i2c_delay
        LSLS     r0,r6,#24
        LDRB     r0,[r5,#1]
        BPL      |L10.32|
        MOVS     r1,#1
        B        |L10.34|
|L10.32|
        MOVS     r1,#0
|L10.34|
        BL       hal_gpio_fast_write
        LDRB     r0,[r5,#0]
        MOVS     r1,#1
        BL       hal_gpio_fast_write
        MOV      r0,r5
        BL       i2c_delay
        LSLS     r0,r6,#25
        ADDS     r4,r4,#1
        LSRS     r6,r0,#24
        UXTB     r4,r4
        CMP      r4,#8
        BCC      |L10.8|
        MOV      r0,r5
        BL       i2c_wait_ack
        POP      {r4-r6,pc}
        ENDP


        AREA ||i.i2c_write_multi_byte||, CODE, READONLY, ALIGN=1

i2c_write_multi_byte PROC
        PUSH     {r0-r7,lr}
        SUB      sp,sp,#4
        MOV      r7,r2
        MOV      r4,r1
        MOV      r5,r3
        LDR      r6,[sp,#0x28]
        LDR      r0,[sp,#4]
        BL       i2c_start
        LSRS     r1,r4,#1
        LSLS     r1,r1,#1
        LDR      r0,[sp,#4]
        BL       i2c_write_byte
        MOV      r1,r7
        LDR      r0,[sp,#4]
        BL       i2c_write_byte
        MOVS     r4,#0
        B        |L11.54|
|L11.40|
        LDRB     r1,[r5,r4]
        LDR      r0,[sp,#4]
        BL       i2c_write_byte
        ADDS     r4,r4,#1
        MOV      r7,r0
        UXTB     r4,r4
|L11.54|
        CMP      r4,r6
        BCC      |L11.40|
        LDR      r0,[sp,#4]
        BL       i2c_stop
        MOV      r0,r7
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.i2c_write_multi_byte_16bit||, CODE, READONLY, ALIGN=1

i2c_write_multi_byte_16bit PROC
        PUSH     {r0-r7,lr}
        SUB      sp,sp,#4
        MOV      r5,r2
        MOV      r6,r1
        MOV      r4,r3
        LDR      r7,[sp,#0x28]
        LDR      r0,[sp,#4]
        BL       i2c_start
        LSRS     r1,r6,#1
        LSLS     r1,r1,#1
        LDR      r0,[sp,#4]
        BL       i2c_write_byte
        LSRS     r1,r5,#8
        LDR      r0,[sp,#4]
        BL       i2c_write_byte
        UXTB     r1,r5
        LDR      r0,[sp,#4]
        BL       i2c_write_byte
        MOVS     r6,#0
        B        |L12.62|
|L12.48|
        LDRB     r1,[r4,r6]
        LDR      r0,[sp,#4]
        BL       i2c_write_byte
        ADDS     r6,r6,#1
        MOV      r5,r0
        UXTB     r6,r6
|L12.62|
        CMP      r6,r7
        BCC      |L12.48|
        LDR      r0,[sp,#4]
        BL       i2c_stop
        MOV      r0,r5
        ADD      sp,sp,#0x14
        POP      {r4-r7,pc}
        ENDP


        AREA ||i.stop_output||, CODE, READONLY, ALIGN=1

stop_output PROC
        PUSH     {r4,lr}
        MOV      r4,r0
        LDRB     r0,[r0,#1]
        MOVS     r1,#0
        BL       hal_gpio_pin_init
        LDRB     r0,[r4,#1]
        MOVS     r1,#1
        BL       hal_gpio_pull_set
        POP      {r4,pc}
        ENDP


        AREA ||.arm_vfe_header||, DATA, READONLY, NOALLOC, ALIGN=2

        DCD      0x00000000

        AREA ||.data||, DATA, ALIGN=2

i2c_drv
        DCB      0x08,0x07,0x00,0x00
head_handle
        DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "Source\\sf_i2c.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___8_sf_i2c_c_i2c_drv____REV16|
#line 208 "C:\\Users\\Dell\\AppData\\Local\\Arm\\Packs\\ARM\\CMSIS\\5.9.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___8_sf_i2c_c_i2c_drv____REV16| PROC
#line 209

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___8_sf_i2c_c_i2c_drv____REVSH|
#line 223
|__asm___8_sf_i2c_c_i2c_drv____REVSH| PROC
#line 224

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***

        EXPORT i2c_init [CODE]
        EXPORT i2c_obj_find [CODE]
        EXPORT i2c_read_byte [CODE]
        EXPORT i2c_read_multi_byte [CODE]
        EXPORT i2c_read_multi_byte_16bit [CODE]
        EXPORT i2c_start [CODE]
        EXPORT i2c_stop [CODE]
        EXPORT i2c_write_byte [CODE]
        EXPORT i2c_write_multi_byte [CODE]
        EXPORT i2c_write_multi_byte_16bit [CODE]
        EXPORT stop_output [CODE]
        EXPORT i2c_drv [DATA,SIZE=2]

        IMPORT ||Lib$$Request$$armlib|| [CODE,WEAK]
        IMPORT strcmp [CODE]
        IMPORT dbg_printf [CODE]
        IMPORT hal_gpio_pin_init [CODE]
        IMPORT hal_gpio_pull_set [CODE]
        IMPORT hal_gpio_fast_write [CODE]
        IMPORT hal_gpio_read [CODE]
        IMPORT hal_gpio_cfg_analog_io [CODE]

        KEEP i2c_delay
        KEEP i2c_nack
        KEEP i2c_wait_ack
        KEEP head_handle

        ATTR FILESCOPE
        ATTR SETVALUE Tag_ABI_PCS_wchar_t,2
        ATTR SETVALUE Tag_ABI_enum_size,1
        ATTR SETVALUE Tag_ABI_optimization_goals,3
        ATTR SETSTRING Tag_conformance,"2.09"
        ATTR SETVALUE AV,18,1

        ASSERT {ENDIAN} = "little"
        ASSERT {INTER} = {TRUE}
        ASSERT {ROPI} = {FALSE}
        ASSERT {RWPI} = {FALSE}
        ASSERT {IEEE_FULL} = {FALSE}
        ASSERT {IEEE_PART} = {FALSE}
        ASSERT {IEEE_JAVA} = {FALSE}
        END
